@using EliteRentals.Models.ViewModels
@model ConversationDetailViewModel

@{
    ViewData["Title"] = $"Conversation with {Model.OtherUserName}";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        @await Html.PartialAsync("_ManagerSidebar")

        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4 py-4">
            <div class="d-flex justify-content-between align-items-center pb-2 mb-3 border-bottom">
                <div>
                    <a href="@Url.Action("ManagerMessages")" class="btn btn-outline-secondary me-2">
                        <i class="fas fa-arrow-left"></i> Back to Messages
                    </a>
                    <h2 class="h3 d-inline">Conversation with @Model.OtherUserName</h2>
                </div>
            </div>

            @if (TempData["Error"] != null)
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @TempData["Error"]
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                </div>
            }

            <div class="card shadow-sm">
                <div class="card-body">
                    <!-- Messages -->
                    <div class="chat-messages" style="height: 400px; overflow-y: auto; border: 1px solid #dee2e6; padding: 15px; margin-bottom: 15px; background-color: #f8f9fa;">
                        @if (Model.Messages.Any())
                        {
                            foreach (var message in Model.Messages)
                            {
                                var isCurrentUser = message.SenderId == Model.CurrentUserId;
                                <div class="mb-3 @(isCurrentUser ? "text-end" : "text-start")">
                                    <div class="d-inline-block" style="max-width: 75%;">
                                        <div class="card @(isCurrentUser ? "bg-primary text-white" : "bg-light")">
                                            <div class="card-body p-3">
                                                <p class="card-text mb-1">@message.MessageText</p>
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <small class="@(isCurrentUser ? "text-white-50" : "text-muted")">
                                                        @message.Timestamp.ToLocalTime().ToString("MMM dd, yyyy h:mm tt")
                                                    </small>
                                                    @if (message.IsChatbot)
                                                    {
                                                        <small class="ms-2 @(isCurrentUser ? "text-white-50" : "text-muted")"><em>Chatbot</em></small>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                        else
                        {
                            <div class="text-center text-muted py-4">
                                <i class="fas fa-comment-slash fa-2x mb-2"></i>
                                <p class="mb-0">No messages in this conversation yet</p>
                                <small>Start the conversation by sending a message</small>
                            </div>
                        }
                    </div>

                    <!-- Message Form -->
                    <form asp-action="SendMessage" method="post">
                        <input type="hidden" name="ReceiverId" value="@Model.OtherUserId" />
                        <div class="input-group">
                            <input type="text" name="MessageText" class="form-control" placeholder="Type your message..." required>
                            <button type="submit" class="btn btn-primary">Send</button>
                        </div>
                    </form>
                </div>
            </div>
        </main>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const messageContainer = document.querySelector('.chat-messages');
            if (messageContainer) {
                messageContainer.scrollTop = messageContainer.scrollHeight;
            }
        });
    </script>
}
