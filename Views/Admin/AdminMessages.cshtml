@model EliteRentals.Models.ViewModels.AdminMessagesViewModel

@{
    ViewData["Title"] = "Admin Messages - EliteRentals";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        @await Html.PartialAsync("_AdminSidebar")

        <main class="col-md-9 ms-sm-auto col-lg-10 px-md-4 py-4">
            <div class="d-flex justify-content-between align-items-center pb-2 mb-3 border-bottom">
                <h2 class="h3">Message Center</h2>
                <div class="d-flex gap-2">
                    <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#newMessageModal">
                        <i class="fas fa-plus"></i> New Message
                    </button>
                    <button class="btn btn-warning" data-bs-toggle="modal" data-bs-target="#broadcastModal">
                        <i class="fas fa-bullhorn"></i> Broadcast Announcement
                    </button>
                </div>
            </div>

            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success">@TempData["Success"]</div>
            }
@*             else if (TempData["Error"] != null)
            {
                <div class="alert alert-danger">@TempData["Error"]</div>
            } *@


            <ul class="nav nav-tabs mb-3" id="messageTabs" role="tablist">
                <li class="nav-item"><button class="nav-link active" data-bs-toggle="tab" data-bs-target="#conversations">Conversations</button></li>
                <li class="nav-item position-relative">
                    <button class="nav-link" data-bs-toggle="tab" data-bs-target="#inbox">
                        Inbox
                        @if (Model.HasUnreadMessages)
                        {
                            <span class="position-absolute top-0 start-100 translate-middle p-1 bg-danger border border-light rounded-circle">
                                <span class="visually-hidden">New messages</span>
                            </span>
                        }
                    </button>
                </li>

                <li class="nav-item"><button class="nav-link" data-bs-toggle="tab" data-bs-target="#sent">Sent</button></li>
                <li class="nav-item"><button class="nav-link" data-bs-toggle="tab" data-bs-target="#announcements">Announcements</button></li>
            </ul>

            <div class="tab-content">
                <!-- Conversations -->
                <div class="tab-pane fade show active" id="conversations">
                    @if (Model.Conversations.Any())
                    {
                        <div class="list-group">
                            @foreach (var convo in Model.Conversations)
                            {
                                <a href="@Url.Action("ViewConversation", "Admin", new { userId = convo.OtherUserId })"
                                   class="list-group-item list-group-item-action d-flex justify-content-between">
                                    <div>
                                        <h6>@convo.OtherUserName</h6>
                                        <p class="mb-1 text-truncate">@convo.LastMessage</p>
                                        @if (convo.IsChatbot)
                                        {
                                            <small class="text-muted"><em>Chatbot</em></small>
                                        }
                                    </div>
                                    <small>@convo.LastMessageTimestamp.ToLocalTime().ToString("MMM dd")</small>
                                </a>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-muted">No conversations yet.</div>
                    }
                </div>

                <!-- Inbox -->
                <div class="tab-pane fade" id="inbox">
                    @if (Model.InboxMessages.Any())
                    {
                        <table class="table table-hover">
                            <thead><tr><th>From</th><th>Message</th><th>Time</th></tr></thead>
                            <tbody>
                                @foreach (var msg in Model.InboxMessages)
                                {
                                    <tr>
                                        <td>
                                            @if (msg.IsBroadcast)
                                            {
                                                <strong>@Model.CurrentUserName</strong>
                                            }
                                            else
                                            {
                                                var sender = Model.Users.FirstOrDefault(u => u.UserId == msg.SenderId);
                                                if (sender != null)
                                                {
                                                    <span>@sender.FirstName @sender.LastName (@sender.Role)</span>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">User @msg.SenderId</span>
                                                }
                                            }
                                        </td>


                                        <td>@msg.MessageText</td>
                                        <td>@msg.Timestamp.ToLocalTime().ToString("g")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <div class="text-muted">No received messages.</div>
                    }
                </div>

                <!-- Sent -->
                <div class="tab-pane fade" id="sent">
                    @if (Model.SentMessages.Any())
                    {
                        <table class="table table-hover">
                            <thead><tr><th>To</th><th>Message</th><th>Time</th></tr></thead>
                            <tbody>
                                @foreach (var msg in Model.SentMessages.Where(m => !m.IsBroadcast))
                                {
                                    <tr>
                                        <td>
                                            @{
                                                var receiver = Model.Users.FirstOrDefault(u => u.UserId == msg.ReceiverId);
                                            }
                                            @if (receiver != null)
                                            {
                                                <span>@receiver.FirstName @receiver.LastName (@receiver.Role)</span>
                                            }
                                            else
                                            {
                                                <span class="text-muted">User @msg.ReceiverId</span>
                                            }
                                        </td>



                                        <td>@msg.MessageText</td>
                                        <td>@msg.Timestamp.ToLocalTime().ToString("g")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <div class="text-muted">No sent messages.</div>
                    }
                </div>

                <!-- Announcements -->
                <div class="tab-pane fade" id="announcements">
                    @if (Model.SentMessages.Any(m => m.IsBroadcast))
                    {
                        <ul class="list-group list-group-flush">
                            @foreach (var msg in Model.SentMessages.Where(m => m.IsBroadcast))
                            {
                                <li class="list-group-item">
                                    <strong>@Model.CurrentUserName</strong>
                                    @if (!string.IsNullOrEmpty(msg.TargetRole))
                                    {
                                        <span class="badge bg-secondary ms-2">@msg.TargetRole</span>
                                    }
                                    <br />
                                    @msg.MessageText
                                    <br />
                                    <small class="text-muted">@msg.Timestamp.ToLocalTime().ToString("MMM dd, yyyy h:mm tt")</small>
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        <div class="text-muted">No announcements sent yet.</div>
                    }
                </div>
            </div>
        </main>
    </div>
</div>

<!-- Compose Modal -->
<div class="modal fade" id="newMessageModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="SendMessage" method="post">
                <div class="modal-header">
                    <h5 class="modal-title">Compose New Message</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Recipient</label>
                        <select name="ReceiverId" class="form-select" required>
                            <option value="">Select a user...</option>
                            @foreach (var user in Model.Users)
                            {
                                <option value="@user.UserId">@user.FirstName @user.LastName (@user.Role)</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Message</label>
                        <textarea name="MessageText" class="form-control" rows="4" required></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Send Message</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Broadcast Modal -->
<div class="modal fade" id="broadcastModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <form asp-action="SendBroadcast" method="post">
                <div class="modal-header">
                    <h5 class="modal-title">Broadcast Announcement</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Target Role</label>
                        <select name="TargetRole" class="form-select">
                            <option value="">All Users</option>
                            <option value="Tenant">Tenants</option>
                            <option value="PropertyManager">Property Managers</option>
                            <option value="Caretaker">Caretakers</option>
                            <option value="Admin">Admins</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Message</label>
                        <textarea name="MessageText" class="form-control" rows="4" required></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-warning">Send Announcement</button>
                </div>
            </form>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        // Auto-refresh inbox light every 30 seconds
        setInterval(async () => {
            const res = await fetch('/Admin/CheckNewMessages');
            const data = await res.json();
            const inboxTab = document.querySelector('#messageTabs button[data-bs-target="#inbox"]');
            if (data.hasNewMessages) {
                if (!inboxTab.querySelector('.bg-danger')) {
                    const dot = document.createElement('span');
                    dot.className = 'position-absolute top-0 start-100 translate-middle p-1 bg-danger border border-light rounded-circle';
                    inboxTab.appendChild(dot);
                }
            } else {
                const dot = inboxTab.querySelector('.bg-danger');
                if (dot) dot.remove();
            }
        }, 30000);
    </script>
}
